{
  "words": [
    {
      "priority": 1,
      "word": "network",
      "part_of_speech": "noun",
      "definition": "A group of interconnected computers or containers that communicate and share resources.",
      "example": "Containers connect to a network to exchange data.",
      "examples": ["Networks enable communication between services and hosts."],
      "frequency_rank": 1,
      "tags": ["networking", "system"],
      "related": ["container", "host", "bridge"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈnɛtwɜːrk",
      "tts_text": "network",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Networks can be physical, virtual, or overlay."
    },
    {
      "priority": 2,
      "word": "container networking",
      "part_of_speech": "noun",
      "definition": "The system that enables containers to communicate with each other, hosts, and external networks.",
      "example": "Docker and Kubernetes use container networking to connect services.",
      "examples": ["Container networking supports bridge, host, and overlay modes."],
      "frequency_rank": 2,
      "tags": ["networking", "container"],
      "related": ["Docker", "Kubernetes", "CNI"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "kənˈteɪnər ˈnɛtwɜːrkɪŋ",
      "tts_text": "container networking",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Critical for microservices and distributed systems."[1][2][3][4][5][6]
    },
    {
      "priority": 3,
      "word": "bridge network",
      "part_of_speech": "noun",
      "definition": "A virtual network that connects containers on the same host, using a software bridge to forward packets.",
      "example": "Docker uses a bridge network by default.",
      "examples": ["Bridge networks isolate containers from the host network."],
      "frequency_rank": 3,
      "tags": ["networking", "container"],
      "related": ["container", "network driver"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "brɪdʒ ˈnɛtwɜːrk",
      "tts_text": "bridge network",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Used for standalone or small deployments."[2][3]
    },
    {
      "priority": 4,
      "word": "host network",
      "part_of_speech": "noun",
      "definition": "A network mode where containers share the host’s network stack, removing isolation.",
      "example": "Host network mode is used for high-performance workloads.",
      "examples": ["Containers can access host ports directly in host mode."],
      "frequency_rank": 4,
      "tags": ["networking", "container"],
      "related": ["container", "bridge network"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "hoʊst ˈnɛtwɜːrk",
      "tts_text": "host network",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Reduces network isolation for performance."[2][3]
    },
    {
      "priority": 5,
      "word": "overlay network",
      "part_of_speech": "noun",
      "definition": "A virtual network that spans multiple hosts, enabling containers on different machines to communicate securely.",
      "example": "Overlay networks connect containers across clusters.",
      "examples": ["Kubernetes and Docker Swarm use overlay networks."],
      "frequency_rank": 5,
      "tags": ["networking", "container"],
      "related": ["container", "bridge network"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈoʊvərleɪ ˈnɛtwɜːrk",
      "tts_text": "overlay network",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Enables multi-host, multi-cloud deployments."[2][3][5]
    },
    {
      "priority": 6,
      "word": "CNI (Container Network Interface)",
      "part_of_speech": "noun",
      "definition": "A specification and set of plugins for configuring network interfaces in Linux containers, widely used in Kubernetes.",
      "example": "Kubernetes uses CNI plugins to assign pod IPs.",
      "examples": ["CNI plugins include Calico, Flannel, Cilium, Canal."],
      "frequency_rank": 6,
      "tags": ["networking", "container", "Kubernetes"],
      "related": ["Kubernetes", "container networking"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "siː ɛn aɪ",
      "tts_text": "CNI",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "CNI manages pod and service networking."[1][4][6][7]
    },
    {
      "priority": 7,
      "word": "pod network",
      "part_of_speech": "noun",
      "definition": "A logical network in Kubernetes that enables communication between pods across nodes in a cluster.",
      "example": "Each pod in Kubernetes gets a unique IP in the pod network.",
      "examples": ["Pod networks are managed by CNI plugins."],
      "frequency_rank": 7,
      "tags": ["networking", "Kubernetes"],
      "related": ["Kubernetes", "CNI", "service network"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "pɒd ˈnɛtwɜːrk",
      "tts_text": "pod network",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Pod-to-pod communication is fundamental in Kubernetes."[1][4]
    },
    {
      "priority": 8,
      "word": "service network",
      "part_of_speech": "noun",
      "definition": "A virtual network in Kubernetes for exposing services and enabling communication between external clients and internal pods.",
      "example": "Service networks route traffic to the correct pods.",
      "examples": ["Services provide stable endpoints for dynamic pods."],
      "frequency_rank": 8,
      "tags": ["networking", "Kubernetes"],
      "related": ["Kubernetes", "pod network", "service"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈsɜːrvɪs ˈnɛtwɜːrk",
      "tts_text": "service network",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Handled by kube-proxy and service abstractions."[1][4]
    },
    {
      "priority": 9,
      "word": "kube-proxy",
      "part_of_speech": "noun",
      "definition": "A Kubernetes component that manages network rules for service discovery and load balancing within a cluster.",
      "example": "kube-proxy routes traffic to healthy pods.",
      "examples": ["It configures iptables or IPVS for service networking."],
      "frequency_rank": 9,
      "tags": ["networking", "Kubernetes"],
      "related": ["Kubernetes", "service network"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "kjuːb ˈprɒksi",
      "tts_text": "kube-proxy",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Central to Kubernetes service networking."[1][4]
    },
    {
      "priority": 10,
      "word": "DNS",
      "part_of_speech": "noun",
      "definition": "Domain Name System, a protocol for translating human-readable names to IP addresses, used for service discovery in clusters.",
      "example": "Kubernetes uses CoreDNS for internal service lookup.",
      "examples": ["DNS enables pods and services to find each other by name."],
      "frequency_rank": 10,
      "tags": ["networking", "system"],
      "related": ["service discovery", "IP address"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "diː ɛn ɛs",
      "tts_text": "DNS",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "CoreDNS is the default DNS in Kubernetes."[1][4]
    },
    {
      "priority": 11,
      "word": "IP address",
      "part_of_speech": "noun",
      "definition": "A unique numerical identifier assigned to each device or container on a network.",
      "example": "Pods and containers receive unique IP addresses.",
      "examples": ["IP addresses enable routing and communication."],
      "frequency_rank": 11,
      "tags": ["networking", "system"],
      "related": ["DNS", "network"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "aɪ piː əˈdrɛs",
      "tts_text": "IP address",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Kubernetes allocates IPs for pods, services, and nodes."[1][4]
    },
    {
      "priority": 12,
      "word": "port",
      "part_of_speech": "noun",
      "definition": "A numerical identifier for a specific process or service on a networked device.",
      "example": "Web servers listen on port 80 or 443.",
      "examples": ["Ports enable multiple services to run on the same host."],
      "frequency_rank": 12,
      "tags": ["networking", "system"],
      "related": ["IP address", "service"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "pɔːrt",
      "tts_text": "port",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Dynamic port allocation is handled by orchestrators."[4]
    },
    {
      "priority": 13,
      "word": "network driver",
      "part_of_speech": "noun",
      "definition": "A software component that implements a specific networking mode or behavior for containers.",
      "example": "Docker supports bridge, host, and overlay network drivers.",
      "examples": ["Network drivers define how containers connect and communicate."],
      "frequency_rank": 13,
      "tags": ["networking", "container"],
      "related": ["bridge network", "overlay network"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈnɛtwɜːrk ˈdraɪvər",
      "tts_text": "network driver",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Each driver provides different isolation and connectivity."[2][3]
    },
    {
      "priority": 14,
      "word": "service mesh",
      "part_of_speech": "noun",
      "definition": "An infrastructure layer that manages service-to-service communication, security, and observability in microservices architectures.",
      "example": "Istio is a popular service mesh for Kubernetes.",
      "examples": ["Service meshes provide traffic control, security, and monitoring."],
      "frequency_rank": 14,
      "tags": ["networking", "microservices"],
      "related": ["Kubernetes", "service discovery"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈsɜːrvɪs mɛʃ",
      "tts_text": "service mesh",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Enables advanced routing, security, and telemetry."[1][4]
    },
    {
      "priority": 15,
      "word": "ingress",
      "part_of_speech": "noun",
      "definition": "A Kubernetes resource that manages external access to services, typically via HTTP/HTTPS routing.",
      "example": "Ingress controllers route traffic from the internet to services.",
      "examples": ["Ingress supports SSL termination and path-based routing."],
      "frequency_rank": 15,
      "tags": ["networking", "Kubernetes"],
      "related": ["service", "load balancer"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈɪnɡrɛs",
      "tts_text": "ingress",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Nginx and Traefik are common ingress controllers."[1][4]
    },
    {
      "priority": 16,
      "word": "egress",
      "part_of_speech": "noun",
      "definition": "Outbound network traffic leaving a container, pod, or cluster to external destinations.",
      "example": "Egress rules restrict which services can access the internet.",
      "examples": ["Egress control is vital for security and compliance."],
      "frequency_rank": 16,
      "tags": ["networking", "Kubernetes"],
      "related": ["ingress", "network policy"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈiːɡrɛs",
      "tts_text": "egress",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Egress policies prevent data exfiltration."[1][4]
    },
    {
      "priority": 17,
      "word": "network policy",
      "part_of_speech": "noun",
      "definition": "A set of rules in Kubernetes that control traffic flow between pods, namespaces, and external endpoints.",
      "example": "Network policies restrict pod-to-pod communication for security.",
      "examples": ["Policies are enforced by CNI plugins."],
      "frequency_rank": 17,
      "tags": ["networking", "Kubernetes"],
      "related": ["CNI", "egress", "ingress"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈnɛtwɜːrk ˈpɒlɪsi",
      "tts_text": "network policy",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Critical for multi-tenant and secure clusters."[1][4]
    },
    {
      "priority": 18,
      "word": "service",
      "part_of_speech": "noun",
      "definition": "A stable network endpoint in Kubernetes that exposes a set of pods to internal or external traffic.",
      "example": "Services load-balance traffic to healthy pods.",
      "examples": ["Types: ClusterIP, NodePort, LoadBalancer, ExternalName."],
      "frequency_rank": 18,
      "tags": ["networking", "Kubernetes"],
      "related": ["pod", "ingress", "load balancer"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈsɜːrvɪs",
      "tts_text": "service",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Services abstract dynamic pod IPs for clients."[1][4]
    },
    {
      "priority": 19,
      "word": "API gateway",
      "part_of_speech": "noun",
      "definition": "A server that acts as a single entry point for API requests, handling routing, authentication, rate limiting, and aggregation.",
      "example": "API gateways manage authentication and traffic for microservices.",
      "examples": ["Kong and AWS API Gateway are popular solutions."],
      "frequency_rank": 19,
      "tags": ["networking", "API", "infrastructure"],
      "related": ["load balancer", "service mesh"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "eɪ piː aɪ ˈɡeɪtweɪ",
      "tts_text": "API gateway",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Centralizes API management and security."
    },
    {
      "priority": 20,
      "word": "load balancer",
      "part_of_speech": "noun",
      "definition": "A device or software that distributes network or application traffic across multiple servers to ensure reliability and performance.",
      "example": "A load balancer distributes requests among backend servers.",
      "examples": ["Load balancers support failover and scaling."],
      "frequency_rank": 20,
      "tags": ["networking", "infrastructure"],
      "related": ["API gateway", "service"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "loʊd ˈbælənser",
      "tts_text": "load balancer",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Types: Layer 4 (TCP), Layer 7 (HTTP/HTTPS)."
    },
    {
      "priority": 21,
      "word": "reverse proxy",
      "part_of_speech": "noun",
      "definition": "A server that forwards client requests to backend servers, often used for load balancing, caching, and security.",
      "example": "Nginx is commonly used as a reverse proxy.",
      "examples": ["Reverse proxies hide backend server details from clients."],
      "frequency_rank": 21,
      "tags": ["networking", "infrastructure"],
      "related": ["load balancer", "API gateway"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "rɪˈvɜːrs ˈprɒksi",
      "tts_text": "reverse proxy",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Improves security and scalability."
    },
    {
      "priority": 22,
      "word": "forward proxy",
      "part_of_speech": "noun",
      "definition": "A server that acts as an intermediary for client requests to external resources, often used for filtering or caching.",
      "example": "A forward proxy can restrict internet access for internal users.",
      "examples": ["Forward proxies are used for anonymity and content filtering."],
      "frequency_rank": 22,
      "tags": ["networking", "infrastructure"],
      "related": ["reverse proxy", "firewall"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈfɔːrwərd ˈprɒksi",
      "tts_text": "forward proxy",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Opposite of reverse proxy."
    },
    {
      "priority": 23,
      "word": "service endpoint",
      "part_of_speech": "noun",
      "definition": "A network address (URL or IP:port) where a service or API can be accessed.",
      "example": "The /api/v1/users endpoint provides user data.",
      "examples": ["Endpoints are documented in API specs."],
      "frequency_rank": 23,
      "tags": ["networking", "API"],
      "related": ["service", "route"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈsɜːrvɪs ˈɛndpɔɪnt",
      "tts_text": "service endpoint",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Endpoints are the interface to APIs."
    },
    {
      "priority": 24,
      "word": "route",
      "part_of_speech": "noun",
      "definition": "A defined path or URL pattern that directs network or API requests to specific handlers or services.",
      "example": "The /login route handles authentication requests.",
      "examples": ["Routes map URLs to application logic."],
      "frequency_rank": 24,
      "tags": ["networking", "API"],
      "related": ["endpoint", "service"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "raʊt",
      "tts_text": "route",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Routing is managed by frameworks and proxies."
    },
    {
      "priority": 25,
      "word": "WebSocket",
      "part_of_speech": "noun",
      "definition": "A protocol for full-duplex, real-time communication between clients and servers over a single TCP connection.",
      "example": "WebSocket enables instant chat and live updates.",
      "examples": ["Used for games, notifications, and streaming."],
      "frequency_rank": 25,
      "tags": ["networking", "protocol"],
      "related": ["HTTP", "real-time"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈwɛbˌsɒkɪt",
      "tts_text": "WebSocket",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "WebSocket connections stay open for ongoing data exchange."
    },
    {
      "priority": 26,
      "word": "REST API",
      "part_of_speech": "noun",
      "definition": "An API that follows REST principles, using HTTP methods to access and manipulate resources via URLs.",
      "example": "A REST API exposes CRUD endpoints for resources.",
      "examples": ["REST APIs return JSON or XML responses."],
      "frequency_rank": 26,
      "tags": ["networking", "API"],
      "related": ["HTTP", "endpoint", "CRUD"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "rɛst eɪ piː aɪ",
      "tts_text": "REST API",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Most modern web APIs are RESTful."
    },
    {
      "priority": 27,
      "word": "GraphQL",
      "part_of_speech": "noun",
      "definition": "A query language and runtime for APIs that enables clients to request exactly the data they need.",
      "example": "GraphQL APIs let clients fetch nested data in one request.",
      "examples": ["GraphQL replaces multiple REST endpoints with a single schema."],
      "frequency_rank": 27,
      "tags": ["networking", "API"],
      "related": ["REST API", "endpoint"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ɡræf kiː juː ɛl",
      "tts_text": "GraphQL",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Popular for modern, flexible APIs."
    },
    {
      "priority": 28,
      "word": "OpenAPI",
      "part_of_speech": "noun",
      "definition": "A specification for describing RESTful APIs, formerly known as Swagger, enabling automated documentation and code generation.",
      "example": "OpenAPI specs document endpoints, methods, and schemas.",
      "examples": ["OpenAPI enables interactive docs and client SDKs."],
      "frequency_rank": 28,
      "tags": ["networking", "API"],
      "related": ["REST API", "endpoint"],
      "synonyms": ["Swagger"],
      "antonyms": [],
      "pronunciation": "ˌoʊpən eɪ piː aɪ",
      "tts_text": "OpenAPI",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "OpenAPI is the industry standard for API docs."
    },
    {
      "priority": 29,
      "word": "service mesh",
      "part_of_speech": "noun",
      "definition": "An infrastructure layer for managing service-to-service communication, security, and observability in microservices.",
      "example": "Istio is a popular service mesh for Kubernetes.",
      "examples": ["Service meshes provide traffic management and monitoring."],
      "frequency_rank": 29,
      "tags": ["networking", "microservices"],
      "related": ["API gateway", "Kubernetes"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈsɜːrvɪs mɛʃ",
      "tts_text": "service mesh",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Enables secure, observable microservice communication."
    },
    {
      "priority": 30,
      "word": "TLS termination",
      "part_of_speech": "noun",
      "definition": "The process where an intermediary (like a load balancer or API gateway) decrypts TLS/SSL traffic before forwarding it to backend services.",
      "example": "TLS termination offloads encryption from application servers.",
      "examples": ["Improves performance and simplifies certificate management."],
      "frequency_rank": 30,
      "tags": ["networking", "security"],
      "related": ["load balancer", "API gateway"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "tiː ɛl ɛs tərˌmɪneɪʃən",
      "tts_text": "TLS termination",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Centralizes SSL certificate management."
    },
    {
      "priority": 31,
      "word": "health check",
      "part_of_speech": "noun",
      "definition": "An automated test or request to determine if a service or endpoint is available and functioning correctly.",
      "example": "Load balancers use health checks to route traffic only to healthy servers.",
      "examples": ["Health checks are essential for self-healing systems."],
      "frequency_rank": 31,
      "tags": ["networking", "monitoring"],
      "related": ["load balancer", "service"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "hɛlθ tʃɛk",
      "tts_text": "health check",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Kubernetes and cloud platforms use health checks."
    },
    {
      "priority": 32,
      "word": "timeout",
      "part_of_speech": "noun",
      "definition": "A limit on how long a system will wait for a response before considering a request or connection failed.",
      "example": "API requests should have reasonable timeouts to avoid hanging.",
      "examples": ["Timeouts prevent resource leaks and improve reliability."],
      "frequency_rank": 32,
      "tags": ["networking", "API"],
      "related": ["retry", "circuit breaker"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈtaɪmaʊt",
      "tts_text": "timeout",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Timeouts are critical for robust APIs."
    },
    {
      "priority": 33,
      "word": "retry",
      "part_of_speech": "noun",
      "definition": "An attempt to repeat a failed network or API request after a timeout or error.",
      "example": "Retry logic improves reliability in distributed systems.",
      "examples": ["Retries should use exponential backoff to avoid overload."],
      "frequency_rank": 33,
      "tags": ["networking", "API"],
      "related": ["timeout", "circuit breaker"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈriːtraɪ",
      "tts_text": "retry",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Retries help handle transient network failures."
    },
    {
      "priority": 34,
      "word": "circuit breaker",
      "part_of_speech": "noun",
      "definition": "A pattern that stops requests to a failing service to prevent cascading failures and allows recovery after a cooldown period.",
      "example": "Circuit breakers protect systems from repeated failures.",
      "examples": ["Common in microservices and distributed APIs."],
      "frequency_rank": 34,
      "tags": ["networking", "API", "resilience"],
      "related": ["retry", "timeout"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈsɜːrkɪt ˈbreɪkər",
      "tts_text": "circuit breaker",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Improves stability in distributed systems."
    },
    {
      "priority": 35,
      "word": "rate limiting",
      "part_of_speech": "noun",
      "definition": "A technique to restrict the number of requests a client can make to an API or service within a given time frame.",
      "example": "Rate limiting protects APIs from abuse and overload.",
      "examples": ["APIs often return 429 Too Many Requests when rate limited."],
      "frequency_rank": 35,
      "tags": ["networking", "API", "security"],
      "related": ["API gateway", "throttling"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "reɪt ˈlɪmɪtɪŋ",
      "tts_text": "rate limiting",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Essential for public and high-traffic APIs."
    },
    {
      "priority": 36,
      "word": "throttling",
      "part_of_speech": "noun",
      "definition": "A method of controlling the rate at which requests are processed, often by delaying or rejecting excess requests.",
      "example": "Throttling prevents a single client from overloading a service.",
      "examples": ["Throttling is implemented at API gateways and proxies."],
      "frequency_rank": 36,
      "tags": ["networking", "API", "security"],
      "related": ["rate limiting", "API gateway"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈθrɒtlɪŋ",
      "tts_text": "throttling",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "C1",
      "language": "en",
      "notes": "Protects system resources and ensures fairness."
    }
  ]
}
