{
  "words": [
    {
      "priority": 1,
      "word": "React",
      "part_of_speech": "noun",
      "definition": "A JavaScript library for building user interfaces with reusable components.",
      "example": "React powers the interactive UI of the assistant.",
      "examples": ["React components manage their own state."],
      "frequency_rank": 1,
      "tags": ["coding", "framework"],
      "related": ["component", "JSX"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "riˈækt",
      "tts_text": "React",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Core UI library.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 2,
      "word": "Next.js",
      "part_of_speech": "noun",
      "definition": "A React-based framework for server-side rendering, static site generation, and advanced routing.",
      "example": "Next.js enables fast, SEO-friendly web apps.",
      "examples": ["Next.js supports API routes and dynamic pages."],
      "frequency_rank": 2,
      "tags": ["coding", "framework"],
      "related": ["React", "SSR", "SSG"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "nɛkst dʒɛs",
      "tts_text": "Next dot js",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Framework built on React.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 3,
      "word": "TypeScript",
      "part_of_speech": "noun",
      "definition": "A typed superset of JavaScript that compiles to plain JavaScript.",
      "example": "TypeScript adds static typing to the codebase.",
      "examples": ["TypeScript helps catch bugs early."],
      "frequency_rank": 3,
      "tags": ["coding", "language"],
      "related": ["JavaScript", "TSX"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈtaɪpˌskrɪpt",
      "tts_text": "TypeScript",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Preferred for large projects.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 4,
      "word": "Tailwind CSS",
      "part_of_speech": "noun",
      "definition": "A utility-first CSS framework for rapidly building custom user interfaces.",
      "example": "Tailwind CSS enables fast, consistent styling.",
      "examples": ["Tailwind classes are used directly in JSX."],
      "frequency_rank": 4,
      "tags": ["coding", "style"],
      "related": ["CSS", "utility class"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈteɪlwɪnd ˌsiː ɛs ɛs",
      "tts_text": "Tailwind CSS",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Popular for modern UIs.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 5,
      "word": "component",
      "part_of_speech": "noun",
      "definition": "A reusable, self-contained piece of UI in React or Next.js.",
      "example": "Each button is a separate component.",
      "examples": ["Components can be nested and composed."],
      "frequency_rank": 5,
      "tags": ["coding", "architecture"],
      "related": ["React", "props", "state"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "kəmˈpoʊnənt",
      "tts_text": "component",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Building block of React apps.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 6,
      "word": "props",
      "part_of_speech": "noun",
      "definition": "Inputs to a React component that customize its behavior or appearance.",
      "example": "Props pass data from parent to child components.",
      "examples": ["Use props to configure a button's label."],
      "frequency_rank": 6,
      "tags": ["coding", "architecture"],
      "related": ["component", "state"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "prɒps",
      "tts_text": "props",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Short for 'properties.'",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 7,
      "word": "state",
      "part_of_speech": "noun",
      "definition": "An object that stores dynamic data for a component and triggers re-rendering when changed.",
      "example": "State tracks user input in a form.",
      "examples": ["State updates cause components to re-render."],
      "frequency_rank": 7,
      "tags": ["coding", "architecture"],
      "related": ["component", "props", "hook"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "steɪt",
      "tts_text": "state",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Managed with useState hook.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 8,
      "word": "hook",
      "part_of_speech": "noun",
      "definition": "A special function in React for managing state, lifecycle, or side effects in functional components.",
      "example": "The useEffect hook runs code after rendering.",
      "examples": ["Hooks replace class component lifecycle methods."],
      "frequency_rank": 8,
      "tags": ["coding", "architecture"],
      "related": ["state", "effect", "useState", "useEffect"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "hʊk",
      "tts_text": "hook",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Custom hooks are reusable.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 9,
      "word": "context",
      "part_of_speech": "noun",
      "definition": "A React feature for sharing data globally across the component tree without prop drilling.",
      "example": "Theme context provides color settings to all components.",
      "examples": ["Use context for authentication state."],
      "frequency_rank": 9,
      "tags": ["coding", "architecture"],
      "related": ["provider", "consumer", "state"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈkɒn.tɛkst",
      "tts_text": "context",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Context API replaces Redux for simple cases.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 10,
      "word": "JSX",
      "part_of_speech": "noun",
      "definition": "A syntax extension for JavaScript that allows writing HTML-like code in React components.",
      "example": "JSX makes UI code more readable.",
      "examples": ["JSX is compiled to JavaScript."],
      "frequency_rank": 10,
      "tags": ["coding", "language"],
      "related": ["React", "TSX"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "dʒeɪ ɛs ɛks",
      "tts_text": "JSX",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "JSX enables declarative UI.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 11,
      "word": "TSX",
      "part_of_speech": "noun",
      "definition": "A TypeScript extension for JSX, used in React components with TypeScript.",
      "example": "TSX files combine TypeScript and JSX syntax.",
      "examples": ["Use .tsx for typed React components."],
      "frequency_rank": 11,
      "tags": ["coding", "language"],
      "related": ["TypeScript", "JSX"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "tiː ɛs ɛks",
      "tts_text": "TSX",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "TSX is required for typed React UI.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 12,
      "word": "JavaScript",
      "part_of_speech": "noun",
      "definition": "A high-level programming language used for web development and the foundation of React and Next.js.",
      "example": "JavaScript runs in the browser and on servers.",
      "examples": ["All React code is JavaScript or TypeScript."],
      "frequency_rank": 12,
      "tags": ["coding", "language"],
      "related": ["TypeScript", "JSX"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈdʒɑː.vəˌskrɪpt",
      "tts_text": "JavaScript",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B1",
      "language": "en",
      "notes": "JS is the web's scripting language.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 13,
      "word": "CSS",
      "part_of_speech": "noun",
      "definition": "Cascading Style Sheets, a language for describing the appearance of web pages.",
      "example": "CSS controls layout and colors.",
      "examples": ["Tailwind is a CSS framework."],
      "frequency_rank": 13,
      "tags": ["coding", "style"],
      "related": ["Tailwind CSS", "utility class"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˌsiː ɛs ɛs",
      "tts_text": "CSS",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B1",
      "language": "en",
      "notes": "Standard for web styling.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 14,
      "word": "utility class",
      "part_of_speech": "noun",
      "definition": "A single-purpose CSS class, often used in frameworks like Tailwind for rapid styling.",
      "example": "The 'text-center' utility class centers text.",
      "examples": ["Utility classes keep styles consistent."],
      "frequency_rank": 14,
      "tags": ["coding", "style"],
      "related": ["Tailwind CSS", "CSS"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "juːˈtɪlɪti klɑːs",
      "tts_text": "utility class",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Tailwind is built on utility classes.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 15,
      "word": "SVG",
      "part_of_speech": "noun",
      "definition": "Scalable Vector Graphics, an XML-based image format for vector graphics on the web.",
      "example": "SVG files are used for icons and illustrations.",
      "examples": ["SVG images scale without losing quality."],
      "frequency_rank": 15,
      "tags": ["coding", "filetype"],
      "related": ["image", "icon"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˌɛs viː ˈdʒiː",
      "tts_text": "SVG",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "SVGs are used for crisp, scalable UI.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 16,
      "word": "JSON",
      "part_of_speech": "noun",
      "definition": "JavaScript Object Notation, a lightweight data-interchange format used for configuration, data storage, and API communication.",
      "example": "The assistant loads seed data from JSON files.",
      "examples": ["JSON is easy to read and write."],
      "frequency_rank": 16,
      "tags": ["coding", "filetype"],
      "related": ["data", "config"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈdʒeɪsɒn",
      "tts_text": "JSON",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Standard for data exchange.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 17,
      "word": "import",
      "part_of_speech": "verb",
      "definition": "To bring in code, data, or modules from another file or package.",
      "example": "Import the Button component from the UI library.",
      "examples": ["Use import statements in TypeScript."],
      "frequency_rank": 17,
      "tags": ["coding", "operation"],
      "related": ["export", "module"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ɪmˈpɔːrt",
      "tts_text": "import",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "ES6+ syntax for modular code.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 18,
      "word": "export",
      "part_of_speech": "verb",
      "definition": "To make code, functions, or data available to other files or modules.",
      "example": "Export the function to use it elsewhere.",
      "examples": ["Use export default for main components."],
      "frequency_rank": 18,
      "tags": ["coding", "operation"],
      "related": ["import", "module"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈɛkspɔːrt",
      "tts_text": "export",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "ES6+ syntax for modular code.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 19,
      "word": "module",
      "part_of_speech": "noun",
      "definition": "A file or collection of code that can be imported and reused in other parts of a project.",
      "example": "Each utility is a separate module.",
      "examples": ["Modules keep code organized and maintainable."],
      "frequency_rank": 19,
      "tags": ["coding", "architecture"],
      "related": ["import", "export"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈmɒd.juːl",
      "tts_text": "module",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Modules support code reuse.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 20,
      "word": "function",
      "part_of_speech": "noun",
      "definition": "A reusable block of code that performs a specific task.",
      "example": "The render function returns UI elements.",
      "examples": ["Functions accept arguments and return values."],
      "frequency_rank": 20,
      "tags": ["coding", "language"],
      "related": ["method", "arrow function"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈfʌŋk.ʃən",
      "tts_text": "function",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "A2",
      "language": "en",
      "notes": "Functions are core to JavaScript and TypeScript.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 21,
      "word": "arrow function",
      "part_of_speech": "noun",
      "definition": "A concise way to write functions using the => syntax in JavaScript and TypeScript.",
      "example": "Arrow functions are common in React components.",
      "examples": ["const add = (a, b) => a + b;"],
      "frequency_rank": 21,
      "tags": ["coding", "language"],
      "related": ["function", "lambda"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈær.oʊ ˈfʌŋk.ʃən",
      "tts_text": "arrow function",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Preferred for inline callbacks.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 22,
      "word": "variable",
      "part_of_speech": "noun",
      "definition": "A named value used to store and manipulate data in code.",
      "example": "Declare a variable with let or const.",
      "examples": ["Variables hold numbers, strings, or objects."],
      "frequency_rank": 22,
      "tags": ["coding", "language"],
      "related": ["constant", "state"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈvɛəriəbl",
      "tts_text": "variable",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "A2",
      "language": "en",
      "notes": "Variables are fundamental in all programming.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 23,
      "word": "constant",
      "part_of_speech": "noun",
      "definition": "A variable whose value cannot be changed after it is assigned.",
      "example": "Use const for values that never change.",
      "examples": ["Constants improve code safety."],
      "frequency_rank": 23,
      "tags": ["coding", "language"],
      "related": ["variable", "immutable"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈkɒnstənt",
      "tts_text": "constant",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "A2",
      "language": "en",
      "notes": "const is preferred for most declarations.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 24,
      "word": "object",
      "part_of_speech": "noun",
      "definition": "A collection of key-value pairs used to store structured data in JavaScript and TypeScript.",
      "example": "Objects group related data and functions.",
      "examples": ["const user = { name: 'Alex', age: 30 };"],
      "frequency_rank": 24,
      "tags": ["coding", "language"],
      "related": ["array", "class"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈɒbdʒɛkt",
      "tts_text": "object",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "A2",
      "language": "en",
      "notes": "Objects are used for props and state.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 25,
      "word": "array",
      "part_of_speech": "noun",
      "definition": "An ordered collection of values accessed by index.",
      "example": "Arrays store lists of items.",
      "examples": ["const items = [1, 2, 3];"],
      "frequency_rank": 25,
      "tags": ["coding", "language"],
      "related": ["object", "map"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "əˈreɪ",
      "tts_text": "array",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "A2",
      "language": "en",
      "notes": "Arrays are used for mapping UI lists.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 26,
      "word": "map",
      "part_of_speech": "verb",
      "definition": "A function that transforms each element in an array and returns a new array.",
      "example": "Use map to render a list of components.",
      "examples": ["items.map(item => <Item key={item.id} />);"],
      "frequency_rank": 26,
      "tags": ["coding", "language"],
      "related": ["array", "filter"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "mæp",
      "tts_text": "map",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B1",
      "language": "en",
      "notes": "map is essential for dynamic UIs.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 27,
      "word": "filter",
      "part_of_speech": "verb",
      "definition": "A function that creates a new array with only elements that pass a test.",
      "example": "Filter out inactive users from the list.",
      "examples": ["const active = users.filter(u => u.active);"],
      "frequency_rank": 27,
      "tags": ["coding", "language"],
      "related": ["array", "map"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈfɪltər",
      "tts_text": "filter",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B1",
      "language": "en",
      "notes": "filter is used for conditional rendering.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 28,
      "word": "reduce",
      "part_of_speech": "verb",
      "definition": "A function that combines all elements in an array into a single value.",
      "example": "Reduce sums an array of numbers.",
      "examples": ["const total = items.reduce((a, b) => a + b, 0);"],
      "frequency_rank": 28,
      "tags": ["coding", "language"],
      "related": ["array", "map"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "rɪˈdjuːs",
      "tts_text": "reduce",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B1",
      "language": "en",
      "notes": "reduce is powerful for aggregating data.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 29,
      "word": "spread operator",
      "part_of_speech": "noun",
      "definition": "A syntax (...) that expands elements of an array or object.",
      "example": "Use the spread operator to copy arrays.",
      "examples": ["const arr2 = [...arr1];"],
      "frequency_rank": 29,
      "tags": ["coding", "language"],
      "related": ["array", "object"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "sprɛd ˈɒpəˌreɪtər",
      "tts_text": "spread operator",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Common in React props and state updates.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 30,
      "word": "destructuring",
      "part_of_speech": "noun",
      "definition": "A syntax for unpacking values from arrays or properties from objects into distinct variables.",
      "example": "Destructuring extracts values from props.",
      "examples": ["const { name, age } = user;"],
      "frequency_rank": 30,
      "tags": ["coding", "language"],
      "related": ["object", "array"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "dɪˈstrʌktʃərɪŋ",
      "tts_text": "destructuring",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Destructuring is common in React props.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 31,
      "word": "event",
      "part_of_speech": "noun",
      "definition": "An action or occurrence recognized by software, often user-driven, such as clicks or key presses.",
      "example": "The onClick event triggers a function.",
      "examples": ["Events are handled with event listeners."],
      "frequency_rank": 31,
      "tags": ["coding", "UI"],
      "related": ["handler", "listener"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ɪˈvɛnt",
      "tts_text": "event",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Events drive interactive UIs.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 32,
      "word": "handler",
      "part_of_speech": "noun",
      "definition": "A function that responds to an event, such as onClick or onChange.",
      "example": "The click handler updates the state.",
      "examples": ["Handlers are passed as props in React."],
      "frequency_rank": 32,
      "tags": ["coding", "UI"],
      "related": ["event", "listener"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈhændlər",
      "tts_text": "handler",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Handlers connect UI and logic.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 33,
      "word": "listener",
      "part_of_speech": "noun",
      "definition": "A function or method that waits for and responds to specific events.",
      "example": "Add a listener for window resize events.",
      "examples": ["Listeners are used for global events."],
      "frequency_rank": 33,
      "tags": ["coding", "UI"],
      "related": ["event", "handler"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈlɪs.ən.ər",
      "tts_text": "listener",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Listeners are essential for interactivity.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 34,
      "word": "refactor",
      "part_of_speech": "verb",
      "definition": "To restructure existing code without changing its external behavior, improving readability or maintainability.",
      "example": "Refactor components to reduce duplication.",
      "examples": ["Refactoring makes code easier to test."],
      "frequency_rank": 34,
      "tags": ["coding", "practice"],
      "related": ["optimize", "clean code"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "riːˈfæktər",
      "tts_text": "refactor",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Refactoring is a best practice.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 35,
      "word": "optimize",
      "part_of_speech": "verb",
      "definition": "To improve code or systems for better performance, efficiency, or readability.",
      "example": "Optimize images for faster loading.",
      "examples": ["Optimizing code reduces runtime errors."],
      "frequency_rank": 35,
      "tags": ["coding", "practice"],
      "related": ["refactor", "performance"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "ˈɒptɪmaɪz",
      "tts_text": "optimize",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Optimization is key for production apps.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    },
    {
      "priority": 36,
      "word": "debug",
      "part_of_speech": "verb",
      "definition": "To identify and fix errors or bugs in code.",
      "example": "Debug the app using browser tools.",
      "examples": ["Debugging helps maintain code quality."],
      "frequency_rank": 36,
      "tags": ["coding", "practice"],
      "related": ["log", "error"],
      "synonyms": [],
      "antonyms": [],
      "pronunciation": "diːˈbʌɡ",
      "tts_text": "debug",
      "audio_url": "",
      "audio_url_online": "",
      "image_url": "",
      "image_url_online": "",
      "level": "B2",
      "language": "en",
      "notes": "Debugging is a daily coding task.",
      "etymology": "",
      "morphology": "",
      "usage": ""
    }
  ]
}
