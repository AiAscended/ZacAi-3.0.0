[
  {
    "word": "next/head",
    "priority": 109,
    "definitions": [
      {
        "meaning": "A Next.js component for modifying the <head> of the page.",
        "partOfSpeech": "component",
        "example": "Use <Head> to set page titles and meta tags."
      }
    ],
    "syntax": "import Head from 'next/head';",
    "examples": [
      "import Head from 'next/head';\n<Head><title>My Page</title></Head>"
    ],
    "synonyms": ["Head", "document head"],
    "antonyms": [],
    "frequency": 80,
    "etymology": "",
    "pronunciation": "nɛkst hɛd",
    "difficulty": "basic",
    "category": "meta",
    "bestPractice": "Use next/head for SEO and social sharing tags.",
    "relatedConcepts": ["SEO", "meta tags"]
  },
  {
    "word": "next/image",
    "priority": 110,
    "definitions": [
      {
        "meaning": "A Next.js component for optimized images.",
        "partOfSpeech": "component",
        "example": "Use <Image> for responsive, optimized images."
      }
    ],
    "syntax": "import Image from 'next/image';",
    "examples": [
      "<Image src='/logo.png' width={100} height={100} alt='Logo' />"
    ],
    "synonyms": ["Image", "img"],
    "antonyms": [],
    "frequency": 80,
    "etymology": "",
    "pronunciation": "nɛkst ɪmɪdʒ",
    "difficulty": "basic",
    "category": "media",
    "bestPractice": "Always provide width, height, and alt attributes.",
    "relatedConcepts": ["media", "optimization"]
  },
  {
    "word": "next/link",
    "priority": 111,
    "definitions": [
      {
        "meaning": "A Next.js component for client-side navigation.",
        "partOfSpeech": "component",
        "example": "Use <Link> for internal navigation."
      }
    ],
    "syntax": "import Link from 'next/link';",
    "examples": [
      "<Link href='/about'>About</Link>"
    ],
    "synonyms": ["Link", "router link"],
    "antonyms": [],
    "frequency": 90,
    "etymology": "",
    "pronunciation": "nɛkst lɪŋk",
    "difficulty": "basic",
    "category": "routing",
    "bestPractice": "Use next/link for all internal navigation.",
    "relatedConcepts": ["router", "navigation"]
  },
  {
    "word": "next/router",
    "priority": 112,
    "definitions": [
      {
        "meaning": "A Next.js module for programmatic routing and navigation.",
        "partOfSpeech": "module",
        "example": "Use useRouter for navigation and route data."
      }
    ],
    "syntax": "import { useRouter } from 'next/router';",
    "examples": [
      "const router = useRouter();\nrouter.push('/home');"
    ],
    "synonyms": ["router", "navigation"],
    "antonyms": [],
    "frequency": 80,
    "etymology": "",
    "pronunciation": "nɛkst ˈraʊtər",
    "difficulty": "intermediate",
    "category": "routing",
    "bestPractice": "Use useRouter for dynamic navigation and route info.",
    "relatedConcepts": ["Link", "route"]
  },
  {
    "word": "next/dynamic",
    "priority": 113,
    "definitions": [
      {
        "meaning": "A Next.js utility for dynamic imports and code splitting.",
        "partOfSpeech": "module",
        "example": "Use dynamic() to load components on demand."
      }
    ],
    "syntax": "import dynamic from 'next/dynamic';",
    "examples": [
      "const Chart = dynamic(() => import('./Chart'));"
    ],
    "synonyms": ["dynamic import", "code splitting"],
    "antonyms": [],
    "frequency": 70,
    "etymology": "",
    "pronunciation": "nɛkst daɪˈnæmɪk",
    "difficulty": "intermediate",
    "category": "performance",
    "bestPractice": "Use next/dynamic for large or rarely used components.",
    "relatedConcepts": ["dynamic import", "performance"]
  },
  {
    "word": "next/script",
    "priority": 114,
    "definitions": [
      {
        "meaning": "A Next.js component for loading third-party scripts.",
        "partOfSpeech": "component",
        "example": "Use <Script> to load analytics or ads."
      }
    ],
    "syntax": "import Script from 'next/script';",
    "examples": [
      "<Script src='https://example.com/script.js' strategy='lazyOnload' />"
    ],
    "synonyms": ["script loader"],
    "antonyms": [],
    "frequency": 60,
    "etymology": "",
    "pronunciation": "nɛkst skrɪpt",
    "difficulty": "intermediate",
    "category": "meta",
    "bestPractice": "Use next/script for optimized script loading.",
    "relatedConcepts": ["Head", "performance"]
  },
  {
    "word": "next/font",
    "priority": 115,
    "definitions": [
      {
        "meaning": "A Next.js utility for optimizing web fonts.",
        "partOfSpeech": "module",
        "example": "Use next/font for custom and Google fonts."
      }
    ],
    "syntax": "import { Inter } from 'next/font/google';",
    "examples": [
      "import { Inter } from 'next/font/google';\nconst inter = Inter({ subsets: ['latin'] });"
    ],
    "synonyms": ["font optimization"],
    "antonyms": [],
    "frequency": 60,
    "etymology": "",
    "pronunciation": "nɛkst fɒnt",
    "difficulty": "intermediate",
    "category": "styling",
    "bestPractice": "Use next/font for best font performance and privacy.",
    "relatedConcepts": ["performance", "styling"]
  },
  {
    "word": "next-auth",
    "priority": 116,
    "definitions": [
      {
        "meaning": "A popular authentication library for Next.js.",
        "partOfSpeech": "library",
        "example": "Use next-auth for OAuth and email/password login."
      }
    ],
    "syntax": "import NextAuth from 'next-auth';",
    "examples": [
      "import NextAuth from 'next-auth';\nexport default NextAuth(authOptions);"
    ],
    "synonyms": ["authentication", "auth"],
    "antonyms": [],
    "frequency": 70,
    "etymology": "",
    "pronunciation": "nɛkst ɔːθ",
    "difficulty": "intermediate",
    "category": "authentication",
    "bestPractice": "Use next-auth for secure, flexible authentication.",
    "relatedConcepts": ["authentication", "middleware"]
  },
  {
    "word": "next/api",
    "priority": 117,
    "definitions": [
      {
        "meaning": "The API routes feature in Next.js for serverless backend logic.",
        "partOfSpeech": "module",
        "example": "Use pages/api/ for serverless API endpoints."
      }
    ],
    "syntax": "export default function handler(req, res) { ... }",
    "examples": [
      "export default function handler(req, res) { res.status(200).json({ name: 'John' }) }"
    ],
    "synonyms": ["API route", "serverless function"],
    "antonyms": [],
    "frequency": 80,
    "etymology": "",
    "pronunciation": "nɛkst eɪ piː aɪ",
    "difficulty": "basic",
    "category": "api",
    "bestPractice": "Use API routes for backend logic without a separate server.",
    "relatedConcepts": ["API route", "serverless"]
  },
  {
    "word": "next-export",
    "priority": 118,
    "definitions": [
      {
        "meaning": "A Next.js command to export a static HTML version of your site.",
        "partOfSpeech": "command",
        "example": "Use next export for static hosting."
      }
    ],
    "syntax": "next export",
    "examples": [
      "next build && next export"
    ],
    "synonyms": ["static export"],
    "antonyms": [],
    "frequency": 60,
    "etymology": "",
    "pronunciation": "nɛkst ˈɛkspɔːrt",
    "difficulty": "intermediate",
    "category": "deployment",
    "bestPractice": "Use next export for static sites that don’t need SSR or API routes.",
    "relatedConcepts": ["SSG", "deployment"]
  },
  {
    "word": "next-env.d.ts",
    "priority": 119,
    "definitions": [
      {
        "meaning": "A TypeScript declaration file for Next.js projects.",
        "partOfSpeech": "file",
        "example": "Use next-env.d.ts for TypeScript support."
      }
    ],
    "syntax": "/// <reference types='next' />",
    "examples": [
      "/// <reference types='next' />"
    ],
    "synonyms": ["type declarations"],
    "antonyms": [],
    "frequency": 60,
    "etymology": "",
    "pronunciation": "nɛkst ɛnv diː tiː ɛs",
    "difficulty": "intermediate",
    "category": "configuration",
    "bestPractice": "Do not edit next-env.d.ts manually.",
    "relatedConcepts": ["TypeScript", "tsconfig.json"]
  },
  {
    "word": "next-themes",
    "priority": 120,
    "definitions": [
      {
        "meaning": "A library for theme switching (light/dark) in Next.js.",
        "partOfSpeech": "library",
        "example": "Use next-themes for dark mode support."
      }
    ],
    "syntax": "import { ThemeProvider } from 'next-themes';",
    "examples": [
      "<ThemeProvider attribute='class'>...</ThemeProvider>"
    ],
    "synonyms": ["theme provider"],
    "antonyms": [],
    "frequency": 60,
    "etymology": "",
    "pronunciation": "nɛkst θiːmz",
    "difficulty": "intermediate",
    "category": "styling",
    "bestPractice": "Use next-themes for flexible theme switching.",
    "relatedConcepts": ["styling", "provider"]
  },
  {
    "word": "next-seo",
    "priority": 121,
    "definitions": [
      {
        "meaning": "A library for managing SEO metadata in Next.js.",
        "partOfSpeech": "library",
        "example": "Use next-seo for structured data and meta tags."
      }
    ],
    "syntax": "import { NextSeo } from 'next-seo';",
    "examples": [
      "<NextSeo title='Home' description='Welcome!' />"
    ],
    "synonyms": ["SEO library"],
    "antonyms": [],
    "frequency": 60,
    "etymology": "",
    "pronunciation": "nɛkst ɛs iː oʊ",
    "difficulty": "intermediate",
    "category": "meta",
    "bestPractice": "Use next-seo for advanced SEO and social sharing.",
    "relatedConcepts": ["SEO", "meta tags"]
  },
  {
    "word": "next-sitemap",
    "priority": 122,
    "definitions": [
      {
        "meaning": "A library for generating sitemaps for Next.js sites.",
        "partOfSpeech": "library",
        "example": "Use next-sitemap to generate sitemap.xml."
      }
    ],
    "syntax": "npx next-sitemap",
    "examples": [
      "npx next-sitemap"
    ],
    "synonyms": ["sitemap generator"],
    "antonyms": [],
    "frequency": 50,
    "etymology": "",
    "pronunciation": "nɛkst ˈsaɪtmæp",
    "difficulty": "intermediate",
    "category": "meta",
    "bestPractice": "Regenerate sitemaps after deployment.",
    "relatedConcepts": ["SEO", "next-seo"]
  },
  {
    "word": "next-pwa",
    "priority": 123,
    "definitions": [
      {
        "meaning": "A plugin for adding Progressive Web App support to Next.js.",
        "partOfSpeech": "plugin",
        "example": "Use next-pwa for offline support."
      }
    ],
    "syntax": "const withPWA = require('next-pwa');",
    "examples": [
      "module.exports = withPWA({ pwa: { dest: 'public' } });"
    ],
    "synonyms": ["PWA plugin"],
    "antonyms": [],
    "frequency": 50,
    "etymology": "",
    "pronunciation": "nɛkst piː dʌbəljuː eɪ",
    "difficulty": "advanced",
    "category": "deployment",
    "bestPractice": "Use next-pwa for offline and installable web apps.",
    "relatedConcepts": ["PWA", "service worker"]
  },
  {
    "word": "next-i18next",
    "priority": 124,
    "definitions": [
      {
        "meaning": "A library for internationalization (i18n) in Next.js.",
        "partOfSpeech": "library",
        "example": "Use next-i18next for multilingual sites."
      }
    ],
    "syntax": "import { useTranslation } from 'next-i18next';",
    "examples": [
      "const { t } = useTranslation();"
    ],
    "synonyms": ["i18n", "internationalization"],
    "antonyms": [],
    "frequency": 50,
    "etymology": "",
    "pronunciation": "nɛkst aɪ eɪ tiː ɛn ɛks tiː",
    "difficulty": "advanced",
    "category": "internationalization",
    "bestPractice": "Use next-i18next for scalable i18n.",
    "relatedConcepts": ["i18n", "localization"]
  },
  {
    "word": "next-mdx",
    "priority": 125,
    "definitions": [
      {
        "meaning": "A plugin for using MDX (Markdown + JSX) in Next.js.",
        "partOfSpeech": "plugin",
        "example": "Use next-mdx for interactive markdown pages."
      }
    ],
    "syntax": "import { MDXProvider } from '@mdx-js/react';",
    "examples": [
      "<MDXProvider components={components}>{children}</MDXProvider>"
    ],
    "synonyms": ["MDX", "markdown jsx"],
    "antonyms": [],
    "frequency": 50,
    "etymology": "",
    "pronunciation": "nɛkst ɛm diː ɛks",
    "difficulty": "advanced",
    "category": "content",
    "bestPractice": "Use next-mdx for blogs and documentation.",
    "relatedConcepts": ["markdown", "content"]
  },
  {
    "word": "next-sitemap.js",
    "priority": 126,
    "definitions": [
      {
        "meaning": "A configuration file for next-sitemap.",
        "partOfSpeech": "file",
        "example": "Configure next-sitemap.js for sitemap generation."
      }
    ],
    "syntax": "module.exports = { siteUrl: 'https://example.com', ... }",
    "examples": [
      "module.exports = { siteUrl: 'https://example.com', generateRobotsTxt: true }"
    ],
    "synonyms": ["sitemap config"],
    "antonyms": [],
    "frequency": 40,
    "etymology": "",
    "pronunciation": "nɛkst ˈsaɪtmæp dʒeɪ ɛs",
    "difficulty": "advanced",
    "category": "meta",
    "bestPractice": "Keep next-sitemap.js updated with your site’s URL.",
    "relatedConcepts": ["next-sitemap", "SEO"]
  },
  {
    "word": "next-compose-plugins",
    "priority": 127,
    "definitions": [
      {
        "meaning": "A utility for composing multiple Next.js plugins.",
        "partOfSpeech": "library",
        "example": "Use next-compose-plugins to combine plugins."
      }
    ],
    "syntax": "const withPlugins = require('next-compose-plugins');",
    "examples": [
      "module.exports = withPlugins([withPWA, withMDX], { ... });"
    ],
    "synonyms": ["plugin composer"],
    "antonyms": [],
    "frequency": 40,
    "etymology": "",
    "pronunciation": "nɛkst kəmˈpoʊz ˈplʌɡɪnz",
    "difficulty": "advanced",
    "category": "configuration",
    "bestPractice": "Use next-compose-plugins for scalable plugin management.",
    "relatedConcepts": ["plugin", "configuration"]
  },
  {
    "word": "next-bundle-analyzer",
    "priority": 128,
    "definitions": [
      {
        "meaning": "A plugin for analyzing bundle size in Next.js.",
        "partOfSpeech": "plugin",
        "example": "Use next-bundle-analyzer to optimize your bundle."
      }
    ],
    "syntax": "const withBundleAnalyzer = require('@next/bundle-analyzer');",
    "examples": [
      "module.exports = withBundleAnalyzer({ enabled: process.env.ANALYZE === 'true' });"
    ],
    "synonyms": ["bundle analyzer"],
    "antonyms": [],
    "frequency": 40,
    "etymology": "",
    "pronunciation": "nɛkst ˈbʌndl əˈnaɪzər",
    "difficulty": "advanced",
    "category": "performance",
    "bestPractice": "Analyze your bundle regularly to keep it small.",
    "relatedConcepts": ["performance", "optimization"]
  },
  {
    "word": "next-progressbar",
    "priority": 129,
    "definitions": [
      {
        "meaning": "A plugin for showing a progress bar on route changes.",
        "partOfSpeech": "plugin",
        "example": "Use next-progressbar for loading indicators."
      }
    ],
    "syntax": "import NextProgressBar from 'next-progressbar';",
    "examples": [
      "<NextProgressBar color='#29D' startPosition={0.3} stopDelayMs={200} height={3} />"
    ],
    "synonyms": ["progress bar"],
    "antonyms": [],
    "frequency": 40,
    "etymology": "",
    "pronunciation": "nɛkst ˈprəʊɡrɛs bɑːr",
    "difficulty": "advanced",
    "category": "ui",
    "bestPractice": "Use a progress bar for better UX on page transitions.",
    "relatedConcepts": ["ui", "loading"]
  },
  {
    "word": "next-translate",
    "priority": 130,
    "definitions": [
      {
        "meaning": "A library for translation and i18n in Next.js.",
        "partOfSpeech": "library",
        "example": "Use next-translate for multilingual support."
      }
    ],
    "syntax": "import useTranslation from 'next-translate/useTranslation';",
    "examples": [
      "const { t } = useTranslation();"
    ],
    "synonyms": ["i18n", "translation"],
    "antonyms": [],
    "frequency": 40,
    "etymology": "",
    "pronunciation": "nɛkst trænsˈleɪt",
    "difficulty": "advanced",
    "category": "internationalization",
    "bestPractice": "Use next-translate for simple JSON-based translations.",
    "relatedConcepts": ["i18n", "next-i18next"]
  },
  {
    "word": "next-connect",
    "priority": 131,
    "definitions": [
      {
        "meaning": "A middleware framework for Next.js API routes.",
        "partOfSpeech": "library",
        "example": "Use next-connect for composable API route middleware."
      }
    ],
    "syntax": "import nc from 'next-connect';",
    "examples": [
      "export default nc().use(middleware).get((req, res) => res.json({ ok: true }));"
    ],
    "synonyms": ["middleware framework"],
    "antonyms": [],
    "frequency": 40,
    "etymology": "",
    "pronunciation": "nɛkst kəˈnɛkt",
    "difficulty": "advanced",
    "category": "api",
    "bestPractice": "Use next-connect for complex API route logic.",
    "relatedConcepts": ["middleware", "API route"]
  },
  {
    "word": "next-absolute-url",
    "priority": 132,
    "definitions": [
      {
        "meaning": "A utility for getting the absolute URL of a request in Next.js.",
        "partOfSpeech": "library",
        "example": "Use next-absolute-url in API routes."
      }
    ],
    "syntax": "import absoluteUrl from 'next-absolute-url';",
    "examples": [
      "const { origin } = absoluteUrl(req);"
    ],
    "synonyms": ["absolute url"],
    "antonyms": [],
    "frequency": 40,
    "etymology": "",
    "pronunciation": "nɛkst ˈæbsəluːt jʊˈɑːrl",
    "difficulty": "advanced",
    "category": "api",
    "bestPractice": "Use next-absolute-url for building absolute links in emails.",
    "relatedConcepts": ["API route", "url"]
  },
  {
    "word": "next-cookies",
    "priority": 133,
    "definitions": [
      {
        "meaning": "A library for handling cookies in Next.js API routes.",
        "partOfSpeech": "library",
        "example": "Use next-cookies to read cookies in API routes."
      }
    ],
    "syntax": "import cookies from 'next-cookies';",
    "examples": [
      "const allCookies = cookies(ctx);"
    ],
    "synonyms": ["cookie parser"],
    "antonyms": [],
    "frequency": 40,
    "etymology": "",
    "pronunciation": "nɛkst ˈkʊkiz",
    "difficulty": "advanced",
    "category": "api",
    "bestPractice": "Use next-cookies for secure cookie handling.",
    "relatedConcepts": ["API route", "middleware"]
  },
  {
    "word": "next-redux-wrapper",
    "priority": 134,
    "definitions": [
      {
        "meaning": "A library for integrating Redux with Next.js.",
        "partOfSpeech": "library",
        "example": "Use next-redux-wrapper for SSR with Redux."
      }
    ],
    "syntax": "import { wrapper } from 'next-redux-wrapper';",
    "examples": [
      "export const wrapper = createWrapper(makeStore);"
    ],
    "synonyms": ["redux integration"],
    "antonyms": [],
    "frequency": 40,
    "etymology": "",
    "pronunciation": "nɛkst riːˈdʌks ˈræpər",
    "difficulty": "advanced",
    "category": "state management",
    "bestPractice": "Use next-redux-wrapper for SSR/SSG with Redux.",
    "relatedConcepts": ["redux", "state management"]
  },
  {
    "word": "nextjs-monorepo",
    "priority": 135,
    "definitions": [
      {
        "meaning": "A monorepo pattern for managing multiple Next.js apps or packages.",
        "partOfSpeech": "pattern",
        "example": "Use a monorepo for shared code in large projects."
      }
    ],
    "syntax": "// Use Turborepo or Yarn Workspaces",
    "examples": [
      "// packages/app, packages/ui, packages/utils"
    ],
    "synonyms": ["monorepo", "multi-app"],
    "antonyms": [],
    "frequency": 30,
    "etymology": "",
    "pronunciation": "nɛkst dʒeɪ ɛs ˈmɒnoʊˌriːpoʊ",
    "difficulty": "advanced",
    "category": "architecture",
    "bestPractice": "Use monorepos for scalable, maintainable codebases.",
    "relatedConcepts": ["workspace", "architecture"]
  },
  {
    "word": "turborepo",
    "priority": 136,
    "definitions": [
      {
        "meaning": "A high-performance monorepo build system by Vercel.",
        "partOfSpeech": "tool",
        "example": "Use Turborepo for fast monorepo builds."
      }
    ],
    "syntax": "npx turbo run build",
    "examples": [
      "npx turbo run build"
    ],
    "synonyms": ["monorepo build tool"],
    "antonyms": [],
    "frequency": 30,
    "etymology": "",
    "pronunciation": "ˈtɜːrbəˌriːpoʊ",
    "difficulty": "advanced",
    "category": "architecture",
    "bestPractice": "Use Turborepo for large, multi-app projects.",
    "relatedConcepts": ["monorepo", "nextjs-monorepo"]
  }
]
